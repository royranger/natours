/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
	margin: 0;
	padding: 0;
	box-sizing: inherit;
}

html {
	/* font-size: 10px; */
	/* 1rem will now be 10px! So to convert px to rem, we can just divide the px by rem. 30px will be 3rem now */
	/* But if we set the root font size in pixels, the user won't be able to change the size in their browser settings
	(eg if they have poor eyesight). So let's make this a percentage. 62.5% of 16px (what the browser sets by default) is 10px, what we want */
	font-size: 62.5%;
}

body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	font-size: 1.6rem;
	line-height: 1.7;
	color: #777;
	padding: 3rem;
	box-sizing: border-box;
}

.header {
	position: relative;
	height: 95vh;
	background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 131, 0.8)), url(../img/hero.jpg);
	background-size: cover;
	background-position: top;
	/* clip-path specifies a shape, everything inside the path is visible and everything outside is clipped out.  */
	/* the arguments in polygon() are x y coordinates, showing how to draw the path of the 'viewbox' */
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
	position: absolute;
	top: 4rem;
	left: 4rem;
}

.header__logo {
	height: 3.5rem;
}

.header__logo-box:hover .header__logo {
	animation: spin 1s linear;
}

.header__text-box {
	position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: center;
}

.heading {
	color: #fff;
	text-transform: uppercase;
	/* backface visibility hidden fixes issue with animations sometimes where they are a little shaky */
	backface-visibility: hidden;
	margin-bottom: 6rem;
}

.heading--main {
	display: block;
	font-size: 6rem;
	font-weight: 400;
	letter-spacing: 3.5rem;
	animation: moveInLeft 1s ease-in-out;
	/* animation-name: moveInLeft;
	animation-duration: 3s;
	animation-timing-function: ease-in-out; */
}

.heading--slogan {
	display: block;
	font-size: 2rem;
	font-weight: 700;
	letter-spacing: 1.75rem;
	animation: moveInRight 1s ease-in-out;
}

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-10rem);
	}

	80% {
		transform: translateX(1rem);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(10rem);
	}
	80% {
		transform: translateX(-1rem);
	}
	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(10rem);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes spin {
	0% {
		transform: rotate(0);
	}
	50% {
		transform: rotateY(180deg);
	}
	100% {
		transform: rotateY(360deg);
	}
}

.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 1.5rem 4rem;
	display: inline-block;
	border-radius: 10rem;
	transition: all 0.2s;
	position: relative;
}

.btn--moveInBottom {
	animation: moveInBottom 1s ease-in-out .75s;
	/* animation-delay: .75s; */
	/* animation-fill-mode: backwards automatically applies the style of the 0% state of the animation before the animation starts */
	/* This prevents the button from being seen in the .75s before the animation starts */
	animation-fill-mode: backwards;
}

.btn:hover {
	transform: translateY(-3px);
	box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
	transform: translateY(-1px);
	box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn--white {
	background-color: #fff;
	color: #777;
}

.btn::after {
	content: "";
	display: inline-block;
	height: 100%;
	width: 100%;
	border-radius: 100px;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;
	transition: all .4s;
}

.btn--white::after {
	background-color: #fff;
}

.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6);
	opacity: 0;
}
